/**
 * @author finalObject
 * 	   http://www.finalobject.cn
 *	   i@finalobject.cn
 *	   https://github.com/finalobject
 * @date   Feb 23,2017 17:38:12
 * @version 1.0
 */

let maxNum = 100 //constant
var index = 0 //variable

var website = "finalobject.cn"
var website:String = "finalobject.cn"//强类型语言，但是不强制要求申明

Int,UInt,UInt8,,,//Unsigned Integer
// 使用0b,0o,0x
var decimalInt: Int = 17
var binaryInt: Int  = 0b10001
var octalInt: Int   = 0o21
var hexInt:Int      = 0x11
// 使用_标示数字位,数字位间隔任意
let x = 1_000_000

Float,Double,CGFloat
var a:Float =1.25e10
var b:Float =1_000.000_000_1

//不同类型之间运算不存在隐式自动的类型转换
//必须强制显式的类型转换
Float(amInt)

//UIColor
UIColor(red:1,green:1,blue:0,alpha:0.5)//其中的数字即必须是CGFloat类型

var isTrue:Bool = true
var isFalse:Bool = falese

//condition 不一定需要用小括号包裹
//大括号不可省略
if condition{
   statement;
}else{
   statement;
}

//Arrays
var arr:Int[]=[1,2,3]
arr[0]=2

//Cells
var a = 2
var b = "Hello"
var c = true
var arr1=(a,b,c)
var arr2:(Int,String,Bool)=(a,b,c)

var (a1,a2,_)=arr2//取出的是值而不是指针,_忽略值
arr2.0//.运算符可以取出对应位置的指针

var arr3=(x:2,y:3)//直接指定元素的名字
var arr3:(x:Int,y:Int)=(2,3)
arr3.x

//变量名字可以是Unicode

printf(x,y,z,separator:",",terminator:"\n")//默认是空格和会车
printf("\(x)+\(y)=\(result)")//反斜杠括号表示引用

//赋值运算符，会返回值，和C一样
var a=2
//数学运算符
//(+a)(-a)也是运算符，interesting!
//比较预算符，不等于也是!=
//比较引用内容，===,!==
//逻辑运算符，!,&&,||,会短路

